/* Alteração do box model */
*,*::after, *::before { box-sizing: border-box;}

html { font-size: 14px;}

body { background-color: lightgray; 
       font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
       
       /* tamanho minimo de cada pagina, 100vh, independente do conteudo pequeno da pagina, exemplo pagina contato */
       display: flex;
       flex-direction: column;
       min-height: 100vh;
    }

/* Tag main (com display, flex-direction, min-height), ocupará todo o espaço necessario, para colocar o rodapé no final da pagina */
main {flex: 1}

/* imagem flexivel ou responsivo */
img { max-width: 100%;}


/* No chrome */
/* Tecla F12 - Ativar o desenvolvedor do navegador */
/* Tecla ctrl+shift+M - Ativar barra de ferramentas do dispositivo -  ao lado da aba elementos */

/* No Firefox */
/* Tecla F12 - Ativar o desenvolvedor do navegador */
/* Tecla ctrl+shift+M - Ativar nodo de design responsivo -  acima da aba fontes */


/* Reset de elementos, padrão do navegador */
body, h1, h2, h3, p, figure {
    margin:0;
    padding: 0;
}

h1 { font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;
    font-size: 1.5rem;
    font-weight: normal;
}

a { text-decoration: none;}

h1 a {background-color: black;
    color: yellow;
    border-radius: 5px;
    padding: 0.3rem 1rem;
}

/* uppercase - transforma letras de minusculo em maiusculo */
/* position: sticky com dimensão (top: 0) - mantem o cabeçalho preso no topo do site */
header {text-transform: uppercase;
        background-color: white;
        
        /* cabeçalho fixo */
        position: sticky;
        top: 0;

        /* Ajuste de profundidade (eixo Z) Quanto maior, mais a ferente fica */
        z-index: 1000;
}

/* Regra para elemento div, com classe limitador, dentro do cabeçalho */
header .limitador {  
    
    /* Medidas para viewport */
    height: 10vh;
    
    /* flex-box - colocará os itens lado a lado e receberá também o limitador de tamanho de 1100px e margem auto*/
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: white;
}

/* limite de 1100px, deixando de aumentar os itens */
.limitador {
    max-width: 1100px;
    margin: auto;
    width: 95%;
}

/* Regra para o texto e link do menu */
nav h2 { text-align: right;}

nav h2 a { color: black;
           font-size: 1.2rem;
           padding: 1rem;
           display: inline-block; 
}

/* navegação do site pelo teclado e pelo mouse, destacando ao passar, nos links */
nav h2 a:hover,
nav h2 a:focus,
.links-menu a:hover,
.links-menu a:focus {background-color: gainsboro;}

.links-menu { list-style-type: none;
            padding: 0;
            margin: 0;
            /* desativado a lista momentaneamente */
            display: none;
}

/* Nos casos de alinhamentos, centralizado, utilizar o flex */
.links-menu a { color: black;
    font-weight: bold;
    height: 50px;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: whitesmoke ;
}

/* Seletor especifico, que somente funcionará com as duas classes juntas (.links-menu) e (.aberto), que será acionado na programação javascript */


.links-menu.aberto { display: flex;

    /* Flex total links na horizontal, para tornar coluna utilizamos flex-direction */
    flex-direction: column;

    /* Usamos o position absolute e coordenadas "zero" a direita e "zero" a esqueda, para garantir que o menu fique totalmente aberto */
    position: absolute;
    right: 0;
    left: 0;
}

.destaque{
    background-image: url(../imagens/fundo-destaque.jpg);
    color: white;

    /* Medidas viewport */
    height: 90vh;

    background-size: cover;
    background-attachment: fixed;
    text-align: center;

    display: flex;
    flex-wrap: wrap;
    /* Alinhamento (h2 e p) centralizando na horizontal */
    justify-content: center;
    align-items: center;
    /* Alinhamento (h2 e P) centralizando na vertical */
    align-content: center;
}

/* Sem esta definição de tamanho 100% o flex-wrap não funciona */
.destaque h2, 
.destaque p {width: 100%;}

/* Fonte responsivo, usando função chamada clamp(min,ideal,max) */
.destaque h2 {font-size: clamp(2rem, 10vw, 7rem);

    /* etapa 2 da animação */
    animation-name: aparecer;
    animation-duration: 3s;
    /* animation-delay: 2s; */
    /* animation-fill-mode: backwards; */
    /* animation-iteration-count: infinite; */
    /* animation-direction: alternate-reverse; */
}
        
.destaque p {font-size: clamp(1.5rem, 3vw, 4rem);
    font-weight: bold;

    /* etapa 2 da animação */
    animation-name: aparecer;
    animation-duration: 3s;
    animation-delay: 2s;
    animation-fill-mode: backwards;
    /* animation-iteration-count: infinite; */
    /* animation-direction: alternate-reverse; */
}

/* Regra de animação de imagem CSS - keyframes - quadros chave*/
/* etapa 1 */
@keyframes aparecer {
    from {opacity: 0;
    transform: translateY(-100vh);
    }
    to {opacity: 1;
    transform: translateY(0);
    }
}
/* etapa 2 - ir na tag da animação (.destaque h2) e (.destaque p) */

/* centralizar imagens */
.front-end,
.historia,
.localizacao {text-align: center;}

/* espaçamento de linhas */
article h2 {padding: 1rem;}

article p {padding: 0.5rem 0;}

/* história - torna-lo responsivo */
.historia { background-image: url(../imagens/fundo-madeira.jpg);
            background-attachment: fixed;
            background-size: cover;
}

.historia h2 {color: white;
              text-shadow: black 1px 1px 5px;            
}  

.historia iframe {width: 100%;
                  max-width: 700px;
}

footer {background-color: black;
        color: white;
        height: 15vh;
        font-weight: bold;
        display: flex;
        justify-content: center;
        align-items: center;
        text-align: center;
}

/* Regras para o conteudo da pagina de produtos, serviços e contatos */

.conteudo {background-color:silver;
           padding: 0.7rem;
           border-radius: 7px;
}

.conteudo h2 {text-align: center;}

table, th, td {border: solid 2px black;
               border-collapse: collapse;                
}

table {width: 80%;
       margin: auto; 
       max-width: 600px;

}

caption {
    text-transform: uppercase;
    font-weight: bold;
    font-size: 1.1rem;
    padding-bottom: 5px;
}

th {background-color: black;
    color: white;
    font-size: 1.3rem;
    padding: 0.5rem;
}

td {font-size: 1.2rem;}

td:first-child {text-transform: uppercase;}

td:last-child {font-weight: bold;
                text-align: right;
                padding-right: 5px;
}
td:nth-child(2) {text-align: center;}

tr:nth-child(odd) {background-color:gray;}

/* CSS formatação formularios */
form {background-color: burlywood;
      width: 95%;
      margin: auto;
      padding: 1rem;
      border-radius: 10px; 
      }

/* pseudo classe input:not(), permite fazer a exceção da regra, para os casos de type=radio e do type=checkbox */
input:not([type=radio]):not([type=checkbox]), select, textarea {border: none;
    padding: 1%;
    width: 100%;
    height: 40px;
    box-shadow: black 0 0 2px;
    }

textarea {height: auto;}

button {background-color: black;
        color: white;
        border: none;
        padding: 1rem;
        font-weight: bold;
        }

form div {margin-top: 1rem;}


/* Regras - Media query */
/* abaixo de 530px o menu aparece */
/* acima de 530px aparece conteudo do menu e desaparece menu*/
@media screen and (min-width: 530px) {
        nav {width: 70%;}
        nav h2 {display: none}
        .links-menu {display: flex;}
        .links-menu li {width: 100%;}
}

/* viewport (abaixo de 800px) */
@media screen and (min-width: 800px) {
    html {font-size: 18px;}
    header .limitador {height: 15vh;}
    .destaque {height: 85vh;}
}

